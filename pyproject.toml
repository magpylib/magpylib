[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "magpylib"
authors = [
  { name = "Michael Ortner", email = "magpylib@gmail.com" },
]
maintainers = [
    {name = "Alexandre Boisselet", email = "alexabois+magpylib@gmail.com"}
]
description = "Python package for computation of magnetic fields of magnets, currents and moments."
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["magnetism", "physics", "analytical", "electromagnetic", "magnetic-field", "B-field"]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "numpy>=1.23",
    "scipy>=1.8",
    "matplotlib>=3.6",
    "plotly>=5.16",
]

[dependency-groups]
dev = [
  { include-group = "test" }
]

docs = [
  "pydata-sphinx-theme",
  "sphinx>=7.0,<8.0",
  "sphinx-design",
  "sphinx-thebe",
  "sphinx-favicon",
  "sphinx-gallery",
  "sphinx-copybutton",
  "myst-nb",
  "pandas",
  "numpy-stl",
  "pyvista",
  "magpylib-material-response",
  "magpylib-force",
]
test = [
  "pytest>=7.4",
  "pytest-cov>=3",
  "pandas",
  "pyvista",
  "ipywidgets",  # for plotly FigureWidget
  "imageio[tifffile,ffmpeg]",
  "jupyterlab",
  "anywidget",
]
binder = [
    "jupytext",
    "jupyterlab>=3.2",
    "jupyterlab-myst",
]


[project.urls]
Homepage = "https://github.com/magpylib/magpylib"
"Bug Tracker" = "https://github.com/magpylib/magpylib/issues"
Discussions = "https://github.com/magpylib/magpylib/discussions"
Changelog = "https://github.com/magpylib/magpylib/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/magpylib/_version.py"

[tool.hatch.envs.default]
installer = "uv"
features = ["test"]
scripts.test = "pytest {args}"



[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["magpylib"]
report.exclude_also = [
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.11"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "magpylib.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["magpylib._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.11"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "missing-function-docstring",
  "wrong-import-position",
  "invalid-name", # TODO - review later
  "protected-access", # TODO - review later
  "duplicate-code", # already covered by ruff
  "unused-argument", # already covered by ruff
]

[tool.codespell]
skip = 'src/magpylib/_src/fields/special_el3.py'
