import importlib.metadata
import os
import sys
from pathlib import Path

import sphinx.ext.apidoc

# This is for pyvista
os.system("/usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &")
os.environ["DISPLAY"] = ":99"
os.environ["PYVISTA_OFF_SCREEN"] = "true"
os.environ["PYVISTA_USE_IPYVTK"] = "true"
os.environ["MAGPYLIB_MPL_SVG"] = "true"

# Location of Sphinx files

sys.path.insert(0, str(Path("./../").resolve()))  ##Add the folder one level above
os.environ["SPHINX_APIDOC_OPTIONS"] = (
    "members,show-inheritance"  ## Hide undocumented members
)

# from sphinx_gallery.sorting import FileNameSortKey

# pio.renderers.default = "sphinx_gallery"

autodoc_default_options = {
    "private-members": False,
    "inherited-members": True,
}


def setup(app):
    app.add_css_file("css/stylesheet.css")
    app.add_js_file("webcode/summaryOpen.js")
    sphinx.ext.apidoc.main(
        [
            "-f",  # Overwrite existing files
            "-T",  # Create table of contents
            "-e",  # Give modules their own pages
            "-E",  # user docstring headers
            "-M",  # Modules first
            "-o",  # Output the files to:
            "./docs/_autogen/",  # Output Directory
            "./src/magpylib",  # Main Module directory
        ]
    )


# -- Project information -----------------------------------------------------

project = "Magpylib"
copyright = "2019-2025, Magpylib developers, License: BSD 2-clause, Built with Sphinx Pydata-Theme"
author = "The Magpylib Project <magpylib@gmail.com>"

version = release = importlib.metadata.version("magpylib")

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = "7.2"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.napoleon",
    "sphinx.ext.autodoc",
    "sphinx.ext.coverage",
    "sphinx.ext.autosummary",
    "sphinx.ext.ifconfig",
    "matplotlib.sphinxext.plot_directive",
    "sphinx_copybutton",
    "myst_nb",
    "sphinx_thebe",
    "sphinx_favicon",
    "sphinx_design",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store", "README*"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "pydata_sphinx_theme"

html_logo = "./_static/images/magpylib_logo.png"
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#

# Define the json_url for our version switcher.
json_url = "https://magpylib.readthedocs.io/en/latest/_static/switcher.json"

# Define the version we use for matching in the version switcher.
version_match = os.environ.get("READTHEDOCS_VERSION")

# If READTHEDOCS_VERSION doesn't exist, we're not on RTD
# If it is an integer, we're in a PR build and the version isn't correct.
# If it's "latest" â†’ change to "dev" (that's what we want the switcher to call it)
if not version_match or version_match.isdigit() or version_match == "latest":
    # For local development, infer the version to match from the package.
    if "dev" in release or "rc" in release:
        version_match = "dev"
        # We want to keep the relative reference if we are in dev mode
        # but we want the whole url if we are effectively in a released version
        json_url = "_static/switcher.json"
    else:
        version_match = f"{release}"
elif version_match == "stable":
    version_match = f"{release}"


html_theme_options = {
    # "announcement": announcement,
    "logo": {
        "text": "Magpylib",
        "image_dark": "./_static/images/magpylib_logo.png",
    },
    "header_links_before_dropdown": 4,
    "show_version_warning_banner": True,
    "navbar_align": "content",  # [left, content, right] For testing that the navbar items align properly
    "navbar_center": ["navbar-nav"],
    "navbar_persistent": ["version-switcher"],
    "switcher": {
        "json_url": json_url,
        "version_match": version_match,
    },
    "check_switcher": True,
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/magpylib/magpylib",
            "icon": "https://img.shields.io/github/stars/magpylib/magpylib?style=social",
            "type": "url",
        },
    ],
    "navigation_with_keys": False,
    "footer_start": ["copyright"],
    "footer_end": [],
    "use_edit_page_button": True,
    "navigation_depth": 3,
    "collapse_navigation": False,
}

# "show_nav_level": 2,  # Show navigation up to the second level
# "navigation_depth": 4,  # Adjust the depth as needed
# "collapse_navigation": True,  # Option to collapse navigation sections

html_context = {
    # "github_url": "https://github.com", # or your GitHub Enterprise site
    "github_user": "magpylib",
    "github_repo": "magpylib",
    "github_version": "main",
    "doc_path": "docs/",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]
html_css_files = ["custom.css"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
html_sidebars = {
    "**": ["search-field.html", "sidebar-nav-bs.html", "sidebar-ethical-ads.html"],
}

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "magpylibdoc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    "extraclassoptions": "openany,oneside"  # Remove empty pages from .PDF download
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "magpylib.tex", "magpylib Documentation", author, "manual"),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "magpylib", "magpylib Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "magpylib",
        "magpylib Documentation",
        author,
        "magpylib",
        "One line description of project.",
        "Miscellaneous",
    ),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]


# -- Extension configuration -------------------------------------------------

# -- Markdown enable

# source_suffix = [".rst", ".md"]
# source_parsers = {
#     '.md': 'recommonmark.parser.CommonMarkParser',
# }

myst_enable_extensions = [
    "amsmath",
    "colon_fence",
    "deflist",
    "dollarmath",
    "html_admonition",
    "html_image",
    # "linkify",
    "replacements",
    "smartquotes",
    "substitution",
    "tasklist",
]

copybutton_prompt_text = r">>> |\.\.\. |\$ |In \[\d*\]: | {2,5}\.\.\.: | {5,8}: "
copybutton_prompt_is_regexp = True

html_js_files = [
    "https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js",
    # "https://unpkg.com/thebe@latest/lib/index.js",
]

suppress_warnings = [
    "mystnb.unknown_mime_type",
]

favicons = [
    "images/favicons/favicon-16x16.png",
    "images/favicons/favicon-32x32.png",
    "images/favicons/icon.ico",
]


# sphinx gallery settings
# sphinx_gallery_conf = {
#     # convert rst to md for ipynb
#     # "pypandoc": True,
#     # path to your example scripts
#     "examples_dirs": "../examples",
#     # path to where to save gallery generated output
#     "gallery_dirs": "auto_examples",
#     # Remove the "Download all examples" button from the top level gallery
#     "download_all_examples": False,
#     # # Remove sphinx configuration comments from code blocks
#     # "remove_config_comments": True,
#     # # Sort gallery example by file name instead of number of lines (default)
#     # "within_subsection_order": FileNameSortKey,
#     # Modules for which function level galleries are created.  In
#     "doc_module": "pyvista",
#     "image_scrapers": ("pyvista", "matplotlib"),
# }

# import pyvista
# pyvista.BUILDING_GALLERY = True

# html_last_updated_fmt = ""
# html_show_copyright = False
# html_show_sphinx = False
# show_authors = False
# html_show_sourcelink = False
