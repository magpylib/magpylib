# here all core functions should be tested properly - ideally against FEM
import numpy as np

from magpylib._src.fields.field_BH_sphere import magnet_sphere_Bfield
from magpylib._src.fields.field_BH_current_sheet import BHJM_current_sheet

def test_magnet_sphere_Bfield():
    "magnet_sphere_Bfield test"
    B = magnet_sphere_Bfield(
        observers=np.array([(0, 0, 0)]),
        diameters=np.array([1]),
        polarizations=np.array([(0, 0, 1)]),
    )
    Btest = np.array([(0, 0, 2 / 3)])
    np.testing.assert_allclose(B, Btest)


def test_current_sheet_Bfield():
    "test egainst BEM"

    # test 1

    observers = np.array((
        ( 4.881350392732475285e-01,  2.151893663724194994e+00,  1.027633760716438971e+00),
        ( 4.488318299689684210e-01, -7.634520066109526937e-01,  1.458941130666561392e+00),
        (-6.241278873730751187e-01,  3.917730007820797056e+00,  4.636627605010293252e+00),
        (-1.165584811742222726e+00,  2.917250380826645895e+00,  2.889491975290443548e-01),
        ( 6.804456109393228758e-01,  4.255966382926610336e+00, -4.289639418021130801e+00),
        (-4.128707002984592478e+00, -4.797816025596742584e+00,  3.326198455479380200e+00),
        ( 2.781567509498504620e+00,  3.700121482468190948e+00,  4.786183422327640713e+00),
        ( 2.991585642167235548e+00, -3.852063774706815380e-01,  2.805291762864554173e+00),
        (-3.817255741310667805e+00,  1.399210213275238424e+00, -3.566467125909535962e+00),
        ( 4.446689170495838894e+00,  2.184832175007169752e-01, -8.533806000947645742e-01),
        (-1.000000000000000000e+00,  0.000000000000000000e+00,  0.000000000000000000e+00),
        ( 2.000000000000000000e+00,  0.000000000000000000e+00,  0.000000000000000000e+00),
        ( 0.000000000000000000e+00, -1.000000000000000000e+00,  0.000000000000000000e+00),
        ( 0.000000000000000000e+00,  2.000000000000000000e+00,  0.000000000000000000e+00),
        ( 2.000000000000000000e+00, -1.000000000000000000e+00,  0.000000000000000000e+00),
        (-1.000000000000000000e+00,  2.000000000000000000e+00,  0.000000000000000000e+00),
        (-1.000000000000000000e+00,  2.000000000000000000e+00,  1.000000000000000000e+00),
        (-1.000000000000000000e+00,  2.000000000000000000e+00, -1.000000000000000000e+00)
    ))

    n = len(observers)

    vertices = np.tile(np.expand_dims(np.array(((0,0,0), (1,0,0), (0,1,0))), axis=0), (n,1,1))
    current_densities = np.tile(np.array((1,1,0)).T, (n,1))

    B_field_current_sheet = BHJM_current_sheet(
        'B',
        observers,
        vertices,
        current_densities,
    )

    B_BEM = -np.array((
        (-5.77021E-09,   5.77021E-09,  -8.75240E-09),
        (-1.18724E-08,   1.18724E-08,   9.24139E-09),
        (-1.10847E-09,   1.10847E-09,  -1.07797E-09),
        (-5.62891E-10,   5.62891E-10,  -7.72038E-09),
        ( 1.08663E-09,  -1.08663E-09,  -8.98825E-10),
        (-3.83528E-10,   3.83528E-10,   7.68352E-11),
        (-9.35900E-10,   9.35900E-10,  -1.78456E-10),
        (-2.32377E-09,   2.32377E-09,   2.75055E-09),
        ( 1.03337E-09,  -1.03337E-09,  -1.49974E-09),
        ( 5.83738E-10,  -5.83738E-10,   2.84827E-09),
        ( 0.00000E+00,   0.00000E+00,  -1.88245E-08),
        ( 0.00000E+00,   0.00000E+00,   2.11957E-08),
        ( 0.00000E+00,   0.00000E+00,   1.88245E-08),
        ( 0.00000E+00,   0.00000E+00,  -2.11957E-08),
        ( 0.00000E+00,   0.00000E+00,   1.62116E-08),
        ( 0.00000E+00,   0.00000E+00,  -1.62116E-08),
        (-4.07319E-09,   4.07319E-09,  -1.16537E-08),
        ( 4.07319E-09,  -4.07319E-09,  -1.16537E-08)
    ))

    np.testing.assert_allclose(B_BEM, B_field_current_sheet, rtol=1e-3)


    # test 2

    observers = np.array((
        ( 1.085110023512870114e+00,  2.601622467210790379e+00, -9.994281259132755668e-01),
        ( 5.116628631591988441e-01, -2.662205459144347808e-01, -5.383070261560110037e-01),
        (-6.869894311164548295e-02,  7.278036352152388311e-01,  9.838373711533496824e-01),
        ( 1.694083670016784726e+00,  1.095972572016473912e+00,  2.426097501983797589e+00),
        ( 2.226124865758727367e-02,  3.390587181954726859e+00, -8.630620340103691834e-01),
        ( 2.352337550892011020e+00,  1.086524011835634962e+00,  1.793449142228758397e+00),
        (-2.980653070238311608e-01, -9.492554575606049205e-03,  3.003722843377683027e+00),
        ( 3.841307878596987635e+00,  5.671208907962141943e-01,  2.461613078346570394e+00),
        ( 3.381945761480191770e+00,  3.473033317519236718e+00, -5.747789431511104441e-01),
        (-8.047260838355881907e-01, -1.508479021771554907e-01,  3.390712517147065341e+00),
        (-1.000000000000000000e+00,  0.000000000000000000e+00,  0.000000000000000000e+00),
        ( 2.000000000000000000e+00,  0.000000000000000000e+00,  0.000000000000000000e+00),
        ( 0.000000000000000000e+00, -5.000000000000000000e-01,  0.000000000000000000e+00),
        ( 4.000000000000000000e+00,  1.500000000000000000e+00,  0.000000000000000000e+00),
        (-1.000000000000000000e+00, -3.333333333333333148e-01,  0.000000000000000000e+00),
        ( 4.000000000000000000e+00,  1.333333333333333259e+00,  0.000000000000000000e+00),
        ( 3.000000000000000000e+00,  5.000000000000000000e-01,  0.000000000000000000e+00),
        ( 1.000000000000000000e+00,  1.000000000000000000e+00,  0.000000000000000000e+00)
    ))

    n = len(observers)

    # coordinates = np.tile(np.array((1,3,1)).T, (n,1))
    # current_densities = np.tile(np.array((0,1)).T, (n,1))
    vertices = np.tile(np.expand_dims(np.array(((0,0,0), (1,0,0), (3,1,0))), axis=0), (n,1,1))
    current_densities = np.tile(np.array((0,1,0)).T, (n,1))

    B_field_current_sheet = BHJM_current_sheet(
        'B',
        observers,
        vertices,
        current_densities,
    )

    B_BEM = -np.array((
        ( 2.97753E-09,   0.00000E+00,  -9.52609E-10),
        ( 3.54616E-08,   0.00000E+00,  -1.98893E-08),
        (-1.08746E-08,   0.00000E+00,  -1.14881E-08),
        (-6.63081E-09,   0.00000E+00,   7.76358E-10),
        ( 1.01150E-09,   0.00000E+00,  -1.50189E-09),
        (-8.61664E-09,   0.00000E+00,   3.69544E-09),
        (-3.72730E-09,   0.00000E+00,  -1.83084E-09),
        (-3.00527E-09,   0.00000E+00,   2.76868E-09),
        ( 5.83104E-10,   0.00000E+00,   1.79762E-09),
        (-2.61711E-09,   0.00000E+00,  -1.53289E-09),
        ( 0.00000E+00,   0.00000E+00,  -1.13296E-08),
        ( 0.00000E+00,   0.00000E+00,   4.27313E-08),
        ( 0.00000E+00,   0.00000E+00,  -2.41300E-08),
        ( 0.00000E+00,   0.00000E+00,   6.59267E-09),
        ( 0.00000E+00,   0.00000E+00,  -1.03229E-08),
        ( 0.00000E+00,   0.00000E+00,   7.17046E-09),
        ( 0.00000E+00,   0.00000E+00,   2.94875E-08),
        ( 0.00000E+00,   0.00000E+00,  -1.70749E-08)
    ))

    np.testing.assert_allclose(B_BEM, B_field_current_sheet, rtol=1e-3)


    # test 3

    observers = np.array((
    ( 1.015958051491509195e+00,  4.162956452362095661e+00, -4.181905221741113010e+00),
    ( 2.165521039532602998e-01,  7.858939086953093067e+00,  7.925861778668760849e+00),
    (-7.488293790723274945e+00, -5.855142437236264819e+00, -8.970655933983401553e+00),
    (-1.183803126987271526e+00, -9.402475782428661333e+00, -8.633355121057775250e-01),
    ( 2.982880952295214882e+00, -4.430254347040493812e+00,  3.525098039602625022e+00),
    ( 1.817256348327017434e+00, -9.520362352456693600e+00,  1.177081759817639295e+00),
    (-4.814951061850692327e+00, -1.697976059798607551e+00, -4.329498364573625580e+00),
    ( 3.862758366259926746e+00, -1.190925646585210274e+00, -6.862645230500734606e+00),
    ( 8.929803606368942326e-01,  5.606295290227340189e+00, -3.872729352476405040e+00),
    (-5.560842321356371798e+00, -2.240574848887025183e+00,  8.727672997208607342e+00),
    (-1.600000000000000000e+01, -1.900000000000000000e+01,  4.000000000000000000e+00),
    ( 1.100000000000000000e+01,  1.700000000000000000e+01, -1.700000000000000000e+01),
    ( 5.000000000000000000e+00,  2.500000000000000000e+01,  1.900000000000000000e+01),
    (-1.300000000000000000e+01, -2.300000000000000000e+01, -1.400000000000000000e+01),
    (-4.000000000000000000e+00,  1.300000000000000000e+01,  2.600000000000000000e+01),
    ( 5.000000000000000000e+00,  1.000000000000000000e+00, -2.800000000000000000e+01),
    (-1.000000000000000000e+01, -3.000000000000000000e+00,  1.500000000000000000e+01),
    ( 8.000000000000000000e+00,  2.100000000000000000e+01,  1.000000000000000000e+00),
    (-4.000000000000000000e+00, -1.100000000000000000e+01, -2.100000000000000000e+01)
    ))

    n = len(observers)

    # coordinates = np.tile(np.array((1,3,1)).T, (n,1))
    # current_densities = np.tile(np.array((0,1)).T, (n,1))
    vertices = np.tile(np.expand_dims(np.array(((2,5,-10), (-7,-7,-3), (-1,9,8))), axis=0), (n,1,1))
    current_densities = np.tile((np.array((-197796, -222080, 235402))/47813).T, (n,1))

    B_field_current_sheet = BHJM_current_sheet(
        'B',
        observers,
        vertices,
        current_densities,
    )

    print(B_field_current_sheet)

    B_BEM = -np.array((
    (-2.32655E-07,  -2.78871E-06,  -2.82638E-06),
    ( 1.24586E-06,  -1.43612E-06,  -3.08017E-07),
    (-7.13530E-07,   6.14403E-07,  -1.99095E-08),
    (-4.44243E-07,  -2.12875E-07,  -5.74102E-07),
    (-1.02649E-07,  -5.68612E-07,  -6.22683E-07),
    (-2.53252E-07,  -2.64616E-07,  -4.62435E-07),
    (-1.13738E-06,   3.41224E-06,   2.26345E-06),
    (-7.47656E-07,  -4.03226E-07,  -1.00862E-06),
    ( 7.04419E-07,  -3.68089E-06,  -2.88070E-06),
    ( 1.93455E-07,  -2.18672E-07,  -4.37465E-08),
    (-6.61765E-08,   3.82414E-08,  -1.95275E-08),
    ( 2.69294E-09,  -1.55617E-09,   7.94638E-10),
    ( 1.05467E-07,  -6.09462E-08,   3.11215E-08),
    (-1.03676E-07,   5.99114E-08,  -3.05930E-08),
    ( 1.08566E-07,  -6.27367E-08,   3.20358E-08),
    (-9.88701E-08,   5.71339E-08,  -2.91748E-08),
    ( 1.02747E-07,  -5.93743E-08,   3.03188E-08),
    ( 1.62315E-07,  -9.37968E-08,   4.78962E-08),
    (-1.87278E-07,   1.08222E-07,  -5.52625E-08),
    ))

    np.testing.assert_allclose(B_BEM, B_field_current_sheet, rtol=5e-2)
